name: Deploy Staging

on:
  push:
    branches:
      - staging

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: supabase/setup-cli@v1
        with:
          version: latest
        
      - name: Run Migrations on Staging
        env:
          STAGING_SUPABASE_DB_URL: ${{ secrets.STAGING_SUPABASE_DB_URL }}
        run: |
          echo "üöÄ Running database migrations for staging..."
          
          # Apply migrations with retry logic for prepared statement conflicts
          echo "‚ö° Applying migrations..."
          
          # Try migration, if it fails due to prepared statement, retry once
          if ! supabase db push --db-url "$STAGING_SUPABASE_DB_URL"; then
            echo "‚ö†Ô∏è  First attempt failed, retrying with fresh connection..."
            sleep 2
            supabase db push --db-url "$STAGING_SUPABASE_DB_URL"
          fi
          
          echo "‚úÖ Staging database migrations completed!"

  deploy:
    needs: migrate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        
      - name: Build Project Artifacts
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel build --token=$VERCEL_TOKEN
        
      - name: Deploy to Staging
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "üöÄ Deploying to staging..."
          
          # Deploy to preview and capture URL
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=$VERCEL_TOKEN)
          
          echo "üìã Deployment URL: $DEPLOYMENT_URL"
          echo "‚úÖ Staging deployment completed!"
          echo "üåê Preview available at: $DEPLOYMENT_URL"
          echo "üìù Note: Configure staging.app3.transformo.io domain in Vercel dashboard to use custom domain" 